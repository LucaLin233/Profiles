# Port of HTTP(S) proxy server on the local end
port: 7890

# Port of SOCKS5 proxy server on the local end
socks-port: 7891

# Transparent proxy server port for Linux and macOS (Redirect TCP and TProxy UDP)
redir-port: 7892

# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
tproxy-port: 7893

# HTTP(S) and SOCKS4(A)/SOCKS5 server on the same port
mixed-port: 7890

# authentication of local SOCKS5/HTTP(S) server
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# Set to true to allow connections to the local-end server from
# other LAN IP addresses
allow-lan: true

# This is only applicable when `allow-lan` is `true`
# '*': bind all IP addresses
# 192.168.122.11: bind a single IPv4 address
# "[aaaa::a8aa:ff:fe09:57d8]": bind a single IPv6 address
bind-address: '*'

# Clash router working mode
# rule: rule-based packet routing
# global: all packets will be forwarded to a single endpoint
# direct: directly forward the packets to the Internet
mode: rule

# Clash by default prints logs to STDOUT
# info / warning / error / debug / silent
log-level: info

# When set to false, resolver won't translate hostnames to IPv6 addresses
ipv6: true

# RESTful web API listening address
external-controller: 127.0.0.1:9090

# A relative path to the configuration directory or an absolute path to a
# directory in which you put some static web resource. Clash core will then
# serve it at `${API}/ui`.
# external-ui: folder

# Secret for the RESTful API (optional)
# Authenticate by spedifying HTTP header `Authorization: Bearer ${secret}`
# ALWAYS set a secret if RESTful API is listening on 0.0.0.0
# secret: ""

# 实验性功能
experimental:
  ignore-resolve-fail: true # 忽略 DNS 解析失败，默认值为 true

# Outbound interface name
# interface-name: en0

# Static hosts for DNS server and connection establishment (like /etc/hosts)
#
# Wildcard hostnames are supported (e.g. *.clash.dev, *.foo.*.example.com)
# Non-wildcard domain names have a higher priority than wildcard domain names
# e.g. foo.example.com > *.example.com > .example.com
# P.S. +.foo.com equals to .foo.com and foo.com
hosts:
  # '*.clash.dev': 127.0.0.1
  # '.dev': 127.0.0.1
  # 'alpha.clash.dev': '::1'

  # Firebase Cloud Messaging
  'mtalk.google.com': 108.177.125.188

  # > Router Admin Panel
  'router.asus.com': 192.168.50.1

profile:
  # Store the `select` results in $HOME/.config/clash/.cache
  # set false If you don't want this behavior
  # when two different configurations have groups with the same name, the selected values are shared
  store-selected: false

# DNS server settings
# This section is optional. When not present, the DNS server will be disabled.
dns:
  enable: true
  listen: 0.0.0.0:53
  ipv6: true # when the false, response to AAAA questions will be empty

  # These nameservers are used to resolve the DNS nameserver hostnames below.
  # Specify IP addresses only
  default-nameserver:
    - 223.5.5.5
    - 223.6.6.6
    - "[2400:3200::1]:53"
    - "[2400:3200:baba::1]:53"
  enhanced-mode: redir-host # or fake-ip
  fake-ip-range: 198.18.0.1/16 # Fake IP addresses pool CIDR
  # use-hosts: true # lookup hosts and return IP record
  
  # Hostnames in this list will not be resolved with fake IPs
  # i.e. questions to these domain names will always be answered with their
  # real IP addresses
  fake-ip-filter:
    - '*.msftconnecttest.com'
    - '*.msftncsi.com'
    - '*.srv.nintendo.net'
    - '*.stun.playstation.net'
    - 'xbox.*.microsoft.com'
    - '*.xboxlive.com'
    - '*.logon.battlenet.com.cn'
    - '*.logon.battle.net'
    - 'stun.l.google.com'
  
  # Supports UDP, TCP, DoT, DoH. You can specify the port to connect to.
  # All DNS questions are sent directly to the nameserver, without proxies
  # involved. Clash answers the DNS question with the first result gathered.
  nameserver:
    - dhcp://en0
    # - https://dns.alidns.com/dns-query
    # - 114.114.114.114 # default value
    # - 8.8.8.8 # default value
    # - tls://dns.rubyfish.cn:853 # DNS over TLS
    # - https://1.1.1.1/dns-query # DNS over HTTPS
    # - dhcp://en0 # dns from dhcp

  # When `fallback` is present, the DNS server will send concurrent requests
  # to the servers in this section along with servers in `nameservers`.
  # The answers from fallback servers are used when the GEOIP country
  # is not `CN`.
  # fallback:
  #   - tcp://1.1.1.1

  # If IP addresses resolved with servers in `nameservers` are in the specified
  # subnets below, they are considered invalid and results from `fallback`
  # servers are used instead.
  #
  # IP address resolved with servers in `nameserver` is used when
  # `fallback-filter.geoip` is true and when GEOIP of the IP address is `CN`.
  #
  # If `fallback-filter.geoip` is false, results from `nameserver` nameservers
  # are always used if not match `fallback-filter.ipcidr`.
  #
  # This is a countermeasure against DNS pollution attacks.
  # fallback-filter:
  #   geoip: true
  #   geoip-code: CN
  #   ipcidr:
  #     - 240.0.0.0/4
  #   domain:
  #     - '+.google.com'
  #     - '+.facebook.com'
  #     - '+.youtube.com'
  
  # Lookup domains via specific nameservers
  # nameserver-policy:
  #   'www.baidu.com': '114.114.114.114'
  #   '+.internal.crop.com': '10.0.0.1'

#
# https://github.com/Dreamacro/clash/wiki/premium-core-features
#
# tun:
#   enable: true
#   stack: system # or gvisor
#   # dns-hijack:
#   #   - 8.8.8.8:53
#   #   - tcp://8.8.8.8:53
#   macOS-auto-route: true # auto set global route
#   macOS-auto-detect-interface: true # conflict with interface-name

proxies:
# 支持的协议及加密算法示例请查阅 Clash 项目 README 以使用最新格式：https://github.com/Dreamacro/clash/wiki/configuration

# 服务器节点订阅
proxy-providers:
  # name: # Provider 名称
  #   type: http # http 或 file
  #   path: # 文件路径
  #   url: # 只有当类型为 HTTP 时才可用，您不需要在本地空间中创建新文件。
  #   interval: # 自动更新间隔，仅在类型为 HTTP 时可用
  #   health-check: # 健康检查选项从此处开始
  #     enable:
  #     url: 
  #     interval: 

  #
  # 「url」参数填写订阅链接
  #
  # 订阅链接可以使用 API 进行转换，如：https://dove.589669.xyz/web
  #
  #

  # 此处只是订阅示例，如果没有订阅链接的使用需求，此处及 proxy-groups 的相关内容可删除

  DlerCloud: #「机场」订阅
    type: http
    url: "https://dler.cloud/subscribe/xxxxxx?protocols=smart&provider=clash" # 放机场订阅链接
    interval: 3600
    path: ./Proxy/List.yaml # 注意此处文件名不可相同
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  HK: #「机场」订阅香港地区节点
    type: http
    url: "https://gist.githubusercontent.com/ocd0711/xxxxxx/raw/OCD-CLASH" # 放机场订阅链接
    interval: 3600
    path: ./Proxy/HK.yaml # 注意此处文件名不可相同
    filter: '(香港)'
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204
  
  TW: #「机场」订阅台湾地区节点
    type: http
    url: "https://gist.githubusercontent.com/ocd0711/xxxxxx/raw/OCD-CLASH" # 放机场订阅链接
    interval: 3600
    path: ./Proxy/TW.yaml # 注意此处文件名不可相同
    filter: '(台湾)'
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  US: #「机场」订阅美国地区节点
    type: http
    url: "https://gist.githubusercontent.com/ocd0711/xxxxxx/raw/OCD-CLASH" # 放机场订阅链接
    interval: 3600
    path: ./Proxy/US.yaml # 注意此处文件名不可相同
    filter: '(美国)'
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  JP: #「机场」订阅日本地区节点
    type: http
    url: "https://gist.githubusercontent.com/ocd0711/xxxxxx/raw/OCD-CLASH" # 放机场订阅链接
    interval: 3600
    path: ./Proxy/JP.yaml # 注意此处文件名不可相同
    filter: '(日本)'
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  SG: #「机场」订阅新加坡地区节点
    type: http
    url: "https://gist.githubusercontent.com/ocd0711/xxxxxx/raw/OCD-CLASH" # 放机场订阅链接
    interval: 3600
    path: ./Proxy/SG.yaml # 注意此处文件名不可相同
    filter: '(新加坡)'
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

proxy-groups:
# 策略组示例请查阅 Clash 项目 README 以使用最新格式：https://github.com/Dreamacro/clash/wiki/configuration

#
# 策略组说明
#
# 「MATCH」类似 Surge 的「Final」，此处用于选择白名单模式(PROXY 策略)和黑名单模式(DIRECT 策略)
#
# 「Streaming」和「StreamingSE」比较好理解，有专用于流媒体的节点就设置到其中，如果没有「StreamingSE」的需求可以连带 Rule 部分一起删掉，「Streaming」需至少保留 Rule，用「PROXY」即可。
#
# 「PROXY」是代理规则策略，它可以指定为某个节点或嵌套一个其他策略组，如：「自动测试」、「Fallback」或「负载均衡」的策略组，关于这 3 个策略组的具体示例可以看官方示例：https://github.com/Dreamacro/clash
#

  # 注意此处的「use」而不是「proxies」，当然也可以不用在此先嵌套一个策略组进行选择，可以直接使用，如
  #
  # # 代理节点选择
  # - name: "PROXY"
  #   type: select
  #   use:
  #     - DuckDuckGo # 嵌套使用订阅节点策略组
  #   proxies:
  #     - Fallback
  #     - 1
  #     - 2
  #     - 3
  #
  # 但如果订阅节点很多选起来就很麻烦，不如先嵌套一个策略组进行手动或自动的选择。

  # 代理节点选择
  - name: "PROXY"
    type: select
    proxies:
      - AutoTest
      - HK
      - TW
      - JP
      - US
      - SG
    use:
      - DlerCloud

  # 白名单模式 PROXY, 黑名单模式 DIRECT, 不知道别动
  - name: "MATCH"
    type: select
    proxies:
      - PROXY
      - DIRECT

  # 国际流媒体服务
  - name: "YouTube"
    type: select
    proxies:
      - PROXY
      - HK
      - TW
      - JP
      - US
      - SG
    use:
      - DlerCloud

  # 国际流媒体服务
  - name: "Streaming"
    type: select
    proxies:
      - PROXY
      - HK
      - TW
      - JP
      - US
      - SG
    use:
      - DlerCloud

  # 中国流媒体服务（面向海外版本）
  # 用于观看部分国内流媒体面向港澳台的地区的限定内容，此处应放港澳台节点，如果没有此需求可删除此处策略组及相关规则
  - name: "StreamingSE"
    type: select
    proxies:
      - DIRECT
      - HK
      - TW

  - name: "Guard"
    type: select
    proxies:
      - REJECT
      - DIRECT

  - name: "AutoTest"
    type: url-test # 亦可使用 fallback 或 load-balance
    use: # 注意此处是「use」
      - DlerCloud # 这是上面「proxy-providers」的名称
    url: http://cp.cloudflare.com/generate_204
    interval: "3600"

  - name: "US"
    type: fallback # 亦可使用 fallback 或 load-balance
    use: # 注意此处是「use」
      - US # 这是上面「proxy-providers」的名称
    url: http://cp.cloudflare.com/generate_204
    interval: "3600"

  - name: "TW"
    type: fallback # 亦可使用 fallback 或 load-balance
    use: # 注意此处是「use」
      - TW # 这是上面「proxy-providers」的名称
    url: http://cp.cloudflare.com/generate_204
    interval: "3600"

  - name: "HK"
    type: fallback # 亦可使用 fallback 或 load-balance
    use: # 注意此处是「use」
      - HK # 这是上面「proxy-providers」的名称
    url: http://cp.cloudflare.com/generate_204
    interval: "3600"

  - name: "JP"
    type: fallback # 亦可使用 fallback 或 load-balance
    use: # 注意此处是「use」
      - JP # 这是上面「proxy-providers」的名称
    url: http://cp.cloudflare.com/generate_204
    interval: "3600"

  - name: "SG"
    type: fallback # 亦可使用 fallback 或 load-balance
    use: # 注意此处是「use」
      - SG # 这是上面「proxy-providers」的名称
    url: http://cp.cloudflare.com/generate_204
    interval: "3600"

# 关于 Rule Provider 请查阅：https://lancellc.gitbook.io/clash/clash-config-file/rule-provider

rule-providers:
# name: # Provider 名称
#   type: http # http 或 file
#   behavior: classical # 或 ipcidr、domain
#   path: # 文件路径
#   url: # 只有当类型为 HTTP 时才可用，您不需要在本地空间中创建新文件。
#   interval: # 自动更新间隔，仅在类型为 HTTP 时可用

  Unbreak:
    type: http
    behavior: classical
    path: ./RuleSet/Unbreak.yaml
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Direct/Direct.yaml
    interval: 86400

  Advertising:
    type: http
    behavior: classical
    path: ./RuleSet/Advertising/Reject.yaml
    url:   https://fastly.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Reject.yaml
    interval: 86400

  Hijacking:
    type: http
    behavior: classical
    path: ./RuleSet/Hijacking.yaml
    url:   https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Hijacking/Hijacking.yaml
    interval: 86400

  YouTube:
    type: http
    behavior: classical
    path: ./RuleSet/YouTube/YouTube.yaml
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.yaml
    interval: 86400

  GlobalMedia:
    type: http
    behavior: classical
    path: ./RuleSet/StreamingMedia/GlobalMedia.yaml
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia.yaml
    interval: 86400

  GlobalMedia_Domain:
    type: http
    behavior: domain
    path: ./RuleSet/StreamingMedia/GlobalMedia_Domain.yaml
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia_Domain.yaml
    interval: 86400

  StreamingSE:
    type: http
    behavior: classical
    path: ./RuleSet/StreamingMedia/StreamingSE.yaml
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMedia/ChinaMedia.yaml
    interval: 86400

  Wikipedia:
    type: http
    behavior: classical
    path: ./RuleSet/Wikipedia.yaml
    url: https://raw.githubusercontent.com/VirgilClyne/iRingo/main/RuleSet/Look_Up.Wikipedia.yaml
    interval: 86400

  Telegram:
    type: http
    behavior: classical
    path: ./RuleSet/Telegram.yaml
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml
    interval: 86400

  PayPal:
    type: http
    behavior: classical
    path: ./RuleSet/PayPal.yaml
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PayPal/PayPal.yaml
    interval: 86400

  Global:
    type: http
    behavior: classical
    path: ./RuleSet/Global/Global.yaml
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Global/Global.yaml
    interval: 86400

  Global_Domain:
    type: http
    behavior: domain
    path: ./RuleSet/Global/Global_Domain.yaml
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Global/Global_Domain.yaml
    interval: 86400

  Apple:
    type: http
    behavior: classical
    path: ./RuleSet/Apple.yaml
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple.yaml
    interval: 86400

  LAN:
    type: http
    behavior: classical
    path: ./RuleSet/LAN.yaml
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml
    interval: 86400

  China:
    type: http
    behavior: classical
    path: ./RuleSet/China.yaml
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/China/China.yaml
    interval: 86400

# 规则
rules:
  # Unbreak
  - RULE-SET,Unbreak,DIRECT

  # Advertising
  - RULE-SET,Advertising,Guard

  # Hijacking
  - RULE-SET,Hijacking,Guard

  # Streaming Media
  - RULE-SET,YouTube,YouTube
  - RULE-SET,GlobalMedia,Streaming
  - RULE-SET,GlobalMedia_Domain,Streaming

  # StreamingSE
  - RULE-SET,StreamingSE,StreamingSE

  # Look Up (Only for Wikipedia@macOS, Surge Enhance Mode enabled required)
  - RULE-SET,Wikipedia,PROXY

  # Telegram
  - RULE-SET,Telegram,PROXY

  # PayPal
  - RULE-SET,PayPal,PROXY

  # Global 全球加速
  - RULE-SET,Global,PROXY
  - RULE-SET,Global_Domain,PROXY

  # Apple 服务
  - RULE-SET,Apple,DIRECT

  # Local Area Network 局域网
  - RULE-SET,LAN,DIRECT

  # China 中国直连
  - RULE-SET,China,DIRECT

  # GeoIP China
  - GEOIP,CN,DIRECT

  - MATCH,MATCH